#-------------------------------------------------------------------------------#
#        Discover additional configuration options in our documentation         #
#               https://www.jetbrains.com/help/qodana/github.html               #
#-------------------------------------------------------------------------------#

name: Qodana Code Quality

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: # Specify your branches here
      - main # The 'main' branch
      - 'releases/*' # The release branches

jobs:
  qodana:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # to check out the actual pull request commit, not the merge commit
          fetch-depth: 0  # a full history is required for pull request analysis

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Fix gradlew permissions and line endings
        run: |
          if [ -f gradlew ]; then
            sed -i 's/\r$//' gradlew
            chmod +x gradlew
          else
            echo "gradlew not found in repo root" && exit 1
          fi

      - name: Run tests with coverage (JaCoCo)
        run: ./gradlew --no-daemon test jacocoTestReport

      - name: Prepare Qodana coverage folder
        run: |
          mkdir -p .qodana/code-coverage
          # Ensure the XML exists (fail fast if missing)
          test -f build/reports/jacoco/test/jacocoTestReport.xml
          cp build/reports/jacoco/test/jacocoTestReport.xml .qodana/code-coverage/

      - name: Qodana Scan
        uses: JetBrains/qodana-action@v2025.1
        with:
          pr-mode: false
          use-caches: true
          cache-default-branch-only: false
          upload-result: true
          use-annotations: true
          # Pass coverage dir explicitly; pin linter image to 2025.1
          args: "--coverage-dir,.qodana/code-coverage --image,jetbrains/qodana-jvm:2025.1"
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN_2116466718 }}
          QODANA_ENDPOINT: https://qodana.cloud
